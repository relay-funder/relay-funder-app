name: CI Build, Test and Deploy

# when another commit enters the branch, cancel the previous run
# and all workflows that are depending on this one
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
      - develop
      - "epic/*"
      - "release/*"
  release:
    types: [published]

# for manual executions, display which branch has been triggered to which environment
run-name: |
  ${{ github.event_name == 'workflow_dispatch' &&
    format('Manual build of {0}',
      github.ref_name) || ''
    }}

jobs:
  test:
    # run unit tests (utils) of the project
    # they check the general functionality of the libraries we implemented.
    runs-on: ubuntu-latest

    steps:
      - name: checkout
        uses: actions/checkout@v4
        with: # to have the version work out
          ref: ${{ github.head_ref }} # checkout the correct branch name

      - name: actions/setup-node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm
      - name: Debug PATH and pnpm
        run: |
          echo $PATH
          which pnpm || true
          pnpm --version || true

      - name: Run install
        run: pnpm install --frozen-lockfile

      - name: Run Lint
        run: pnpm lint

      - name: Run Tests
        run: pnpm test

  publish:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: üèó Setup repo
        uses: actions/checkout@v4
        with: # to have the version work out
          ref: ${{ github.head_ref }} # checkout the correct branch name
          fetch-depth: 0 # fetch the whole repo history

      - name: üèó Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm
      - name: Debug PATH and pnpm
        run: |
          echo $PATH
          which pnpm || true
          pnpm --version || true

      - name: Run install
        run: pnpm install --immutable

      - name: Build source
        run: |
          pnpm build

      - name: Publish to wherever
        run: |
          pnpm publish
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
